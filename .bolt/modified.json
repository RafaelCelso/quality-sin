[["/home/project/src/components/Cargos.tsx","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { db, collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from '../firebase';\nimport { Plus, Edit, Trash2 } from 'lucide-react';\nimport usePermissions from '../hooks/usePermissions';\n\nconst Cargos: React.FC = () => {\n  const navigate = useNavigate();\n  const { checkPermission, loading: permissionsLoading } = usePermissions();\n  const [cargos, setCargos] = useState<any[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editingCargo, setEditingCargo] = useState<any>(null);\n  const [novoCargo, setNovoCargo] = useState({ nome: '' });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!permissionsLoading) {\n      if (checkPermission('Visualizar Cargos')) {\n        fetchCargos();\n      } else {\n        navigate('/');\n      }\n    }\n  }, [checkPermission, navigate, permissionsLoading]);\n\n  const fetchCargos = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'cargos'));\n      const fetchedCargos = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      setCargos(fetchedCargos);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Erro ao buscar cargos:\", error);\n      setError(\"Erro ao carregar cargos. Por favor, tente novamente.\");\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (editingCargo) {\n      setEditingCargo(prev => ({ ...prev, [name]: value }));\n    } else {\n      setNovoCargo(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      if (editingCargo) {\n        await updateDoc(doc(db, 'cargos', editingCargo.id), { nome: editingCargo.nome });\n      } else {\n        await addDoc(collection(db, 'cargos'), novoCargo);\n      }\n      setShowModal(false);\n      fetchCargos();\n      setEditingCargo(null);\n      setNovoCargo({ nome: '' });\n    } catch (error) {\n      console.error(\"Erro ao salvar cargo:\", error);\n      setError(\"Erro ao salvar cargo. Por favor, tente novamente.\");\n    }\n  };\n\n  const handleEdit = (cargo: any) => {\n    setEditingCargo(cargo);\n    setShowModal(true);\n  };\n\n  const handleDelete = async (id: string) => {\n    if (window.confirm(\"Tem certeza que deseja excluir este cargo?\")) {\n      try {\n        await deleteDoc(doc(db, 'cargos', id));\n        fetchCargos();\n      } catch (error) {\n        console.error(\"Erro ao excluir cargo:\", error);\n        setError(\"Erro ao excluir cargo. Por favor, tente novamente.\");\n      }\n    }\n  };\n\n  if (loading || permissionsLoading) {\n    return <div>Carregando...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-500\">{error}</div>;\n  }\n\n  return (\n    <div className=\"flex\">\n      <Sidebar />\n      <div className=\"flex-1 p-8\">\n        <h1 className=\"text-2xl font-bold mb-4\">Cargos</h1>\n        \n        <button\n          onClick={() => setShowModal(true)}\n          className=\"bg-emerald-500 text-white px-4 py-2 rounded hover:bg-emerald-600 flex items-center mb-4\"\n        >\n          <Plus size={20} className=\"mr-2\" />\n          Novo Cargo\n        </button>\n\n        <table className=\"min-w-full bg-white\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"py-2 px-4 border-b text-left\">Nome</th>\n              <th className=\"py-2 px-4 border-b text-left\">Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {cargos.map((cargo) => (\n              <tr key={cargo.id}>\n                <td className=\"py-2 px-4 border-b\">{cargo.nome}</td>\n                <td className=\"py-2 px-4 border-b\">\n                  <button\n                    onClick={() => handleEdit(cargo)}\n                    className=\"text-blue-500 hover:text-blue-700 mr-2\"\n                  >\n                    <Edit size={20} />\n                  </button>\n                  <button\n                    onClick={() => handleDelete(cargo.id)}\n                    className=\"text-red-500 hover:text-red-700\"\n                  >\n                    <Trash2 size={20} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        {showModal && (\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full\">\n            <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n              <h3 className=\"text-lg font-bold mb-4\">{editingCargo ? 'Editar Cargo' : 'Novo Cargo'}</h3>\n              <form onSubmit={handleSubmit}>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Nome</label>\n                  <input\n                    type=\"text\"\n                    name=\"nome\"\n                    value={editingCargo ? editingCargo.nome : novoCargo.nome}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                    required\n                  />\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowModal(false)}\n                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                  >\n                    Cancelar\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-emerald-500 text-white rounded hover:bg-emerald-600\"\n                  >\n                    {editingCargo ? 'Atualizar' : 'Salvar'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Cargos;"],["/home/project/src/components/Colaboradores.tsx","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { db, collection, getDocs, query, orderBy, limit, addDoc, updateDoc, deleteDoc, doc } from '../firebase';\nimport { Plus, Search, Edit, Trash2 } from 'lucide-react';\nimport usePermissions from '../hooks/usePermissions';\n\nconst Colaboradores: React.FC = () => {\n  const navigate = useNavigate();\n  const { checkPermission, loading: permissionsLoading } = usePermissions();\n  const [colaboradores, setColaboradores] = useState<any[]>([]);\n  const [cargos, setCargos] = useState<any[]>([]);\n  const [projetos, setProjetos] = useState<any[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [editingColaborador, setEditingColaborador] = useState<any>(null);\n  const [novoColaborador, setNovoColaborador] = useState({\n    nome: '',\n    email: '',\n    cargo: '',\n    projeto: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!permissionsLoading) {\n      if (checkPermission('Visualizar Colaboradores')) {\n        fetchColaboradores();\n        fetchCargos();\n        fetchProjetos();\n      } else {\n        navigate('/');\n      }\n    }\n  }, [permissionsLoading, checkPermission, navigate]);\n\n  const fetchColaboradores = async () => {\n    try {\n      const q = query(collection(db, 'colaboradores'), orderBy('nome'), limit(100));\n      const querySnapshot = await getDocs(q);\n      const fetchedColaboradores = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      setColaboradores(fetchedColaboradores);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Erro ao buscar colaboradores:\", error);\n      setError(\"Erro ao carregar colaboradores. Por favor, tente novamente.\");\n      setLoading(false);\n    }\n  };\n\n  const fetchCargos = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'cargos'));\n      const fetchedCargos = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      setCargos(fetchedCargos);\n    } catch (error) {\n      console.error(\"Erro ao buscar cargos:\", error);\n      setError(\"Erro ao carregar cargos. Por favor, tente novamente.\");\n    }\n  };\n\n  const fetchProjetos = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'projetos'));\n      const fetchedProjetos = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      setProjetos(fetchedProjetos);\n    } catch (error) {\n      console.error(\"Erro ao buscar projetos:\", error);\n      setError(\"Erro ao carregar projetos. Por favor, tente novamente.\");\n    }\n  };\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value.toLowerCase());\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    if (editingColaborador) {\n      setEditingColaborador(prev => ({ ...prev, [name]: value }));\n    } else {\n      setNovoColaborador(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      if (editingColaborador) {\n        await updateDoc(doc(db, 'colaboradores', editingColaborador.id), editingColaborador);\n      } else {\n        await addDoc(collection(db, 'colaboradores'), novoColaborador);\n      }\n      setShowModal(false);\n      fetchColaboradores();\n      setEditingColaborador(null);\n      setNovoColaborador({ nome: '', email: '', cargo: '', projeto: '' });\n    } catch (error) {\n      console.error(\"Erro ao salvar colaborador:\", error);\n      setError(\"Erro ao salvar colaborador. Por favor, tente novamente.\");\n    }\n  };\n\n  const handleEdit = (colaborador: any) => {\n    setEditingColaborador(colaborador);\n    setShowModal(true);\n  };\n\n  const handleDelete = async (id: string) => {\n    if (window.confirm(\"Tem certeza que deseja excluir este colaborador?\")) {\n      try {\n        await deleteDoc(doc(db, 'colaboradores', id));\n        fetchColaboradores();\n      } catch (error) {\n        console.error(\"Erro ao excluir colaborador:\", error);\n        setError(\"Erro ao excluir colaborador. Por favor, tente novamente.\");\n      }\n    }\n  };\n\n  const filteredColaboradores = colaboradores.filter(colaborador =>\n    colaborador.nome.toLowerCase().includes(searchTerm) ||\n    colaborador.email.toLowerCase().includes(searchTerm)\n  );\n\n  if (loading || permissionsLoading) {\n    return <div>Carregando...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-500\">{error}</div>;\n  }\n\n  return (\n    <div className=\"flex\">\n      <Sidebar />\n      <div className=\"flex-1 p-8\">\n        <h1 className=\"text-2xl font-bold mb-4\">Colaboradores</h1>\n        \n        <div className=\"mb-4 flex items-center space-x-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Buscar por nome ou email\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n            className=\"border rounded px-2 py-1 flex-grow\"\n          />\n          <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-emerald-500 text-white px-4 py-2 rounded hover:bg-emerald-600 flex items-center\"\n          >\n            <Plus size={20} className=\"mr-2\" />\n            Novo Colaborador\n          </button>\n        </div>\n\n        <table className=\"min-w-full bg-white\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"py-2 px-4 border-b text-left\">Nome</th>\n              <th className=\"py-2 px-4 border-b text-left\">Email</th>\n              <th className=\"py-2 px-4 border-b text-left\">Cargo</th>\n              <th className=\"py-2 px-4 border-b text-left\">Projeto</th>\n              <th className=\"py-2 px-4 border-b text-left\">Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredColaboradores.map((colaborador) => (\n              <tr key={colaborador.id}>\n                <td className=\"py-2 px-4 border-b\">{colaborador.nome}</td>\n                <td className=\"py-2 px-4 border-b\">{colaborador.email}</td>\n                <td className=\"py-2 px-4 border-b\">{colaborador.cargo}</td>\n                <td className=\"py-2 px-4 border-b\">{colaborador.projeto}</td>\n                <td className=\"py-2 px-4 border-b\">\n                  <button\n                    onClick={() => handleEdit(colaborador)}\n                    className=\"text-blue-500 hover:text-blue-700 mr-2\"\n                  >\n                    <Edit size={20} />\n                  </button>\n                  <button\n                    onClick={() => handleDelete(colaborador.id)}\n                    className=\"text-red-500 hover:text-red-700\"\n                  >\n                    <Trash2 size={20} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        {showModal && (\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full\">\n            <div className=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n              <h3 className=\"text-lg font-bold mb-4\">{editingColaborador ? 'Editar Colaborador' : 'Novo Colaborador'}</h3>\n              <form onSubmit={handleSubmit}>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Nome</label>\n                  <input\n                    type=\"text\"\n                    name=\"nome\"\n                    value={editingColaborador ? editingColaborador.nome : novoColaborador.nome}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Email</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={editingColaborador ? editingColaborador.email : novoColaborador.email}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                    required\n                  />\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Cargo</label>\n                  <select\n                    name=\"cargo\"\n                    value={editingColaborador ? editingColaborador.cargo : novoColaborador.cargo}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                    required\n                  >\n                    <option value=\"\">Selecione um cargo</option>\n                    {cargos.map((cargo) => (\n                      <option key={cargo.id} value={cargo.nome}>{cargo.nome}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Projeto</label>\n                  <select\n                    name=\"projeto\"\n                    value={editingColaborador ? editingColaborador.projeto : novoColaborador.projeto}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                    required\n                  >\n                    <option value=\"\">Selecione um projeto</option>\n                    {projetos.map((projeto) => (\n                      <option key={projeto.id} value={projeto.nome}>{projeto.nome}</option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowModal(false)}\n                    className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                  >\n                    Cancelar\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 bg-emerald-500 text-white rounded hover:bg-emerald-600\"\n                  >\n                    {editingColaborador ? 'Atualizar' : 'Salvar'}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Colaboradores;"]]